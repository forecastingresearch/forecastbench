#!/bin/sh
set -ex

MOUNT_POINT="BUCKET_MOUNT_POINT"

# setup website assets bucket for build
ASSETS_MNT="$MOUNT_POINT/WEBSITE_STAGING_ASSETS_BUCKET"

# clean build dir
rm -rf -- "$ASSETS_MNT"/* "$ASSETS_MNT"/.[!.]*

# copy all website files to the build dir
cp -r . "$ASSETS_MNT/"

# copy question fixed effects files to the build dir
# they're listed individually in the static html so need to be present at build time
PUBLIC_RELEASE_MNT="$MOUNT_POINT/PUBLIC_RELEASE_BUCKET"
QUESTION_FE_DIR="assets/data/question-fixed-effects"
mkdir -p "$ASSETS_MNT/$QUESTION_FE_DIR"
cp -a "$PUBLIC_RELEASE_MNT/question-fixed-effects/." "$ASSETS_MNT/$QUESTION_FE_DIR/"

# build and deploy website
WEBSITE_MNT="$MOUNT_POINT/WEBSITE_BUCKET"
bundle exec jekyll build --source "$ASSETS_MNT/" --destination "$WEBSITE_MNT/"

# Update files; doing after the build to save one round of copies
#
# leaderboard .js files
LEADERBOARD_DIR="assets/js"
mkdir -p "$WEBSITE_MNT/$LEADERBOARD_DIR"
cp -a "$PUBLIC_RELEASE_MNT/leaderboards/js/." "$WEBSITE_MNT/$LEADERBOARD_DIR/"
# leaderboard sota_graph_tournament.csv
DATA_DIR="assets/data"
mkdir -p "$WEBSITE_MNT/$DATA_DIR"
cp -a "$PUBLIC_RELEASE_MNT/leaderboards/csv/sota_graph_tournament.csv" "$WEBSITE_MNT/$DATA_DIR/"
# archived forecast sets
FORECAST_SETS_MNT="$MOUNT_POINT/FORECAST_SETS_BUCKET"
FORECAST_SETS_DIR="assets/data/forecast-sets"
mkdir -p "$WEBSITE_MNT/$FORECAST_SETS_DIR"
cp -f "$FORECAST_SETS_MNT/FORECAST_SETS_BUCKET.tar.gz" \
   "$WEBSITE_MNT/$FORECAST_SETS_DIR/forecast_sets.tar.gz"
# archived processed forecast sets
PROCESSED_FORECAST_SETS_MNT="$MOUNT_POINT/PROCESSED_FORECAST_SETS_BUCKET"
PROCESSED_FORECAST_SETS_DIR="assets/data/processed-forecast-sets"
mkdir -p "$WEBSITE_MNT/$PROCESSED_FORECAST_SETS_DIR"
cp -f "$PROCESSED_FORECAST_SETS_MNT/PROCESSED_FORECAST_SETS_BUCKET.tar.gz" \
   "$WEBSITE_MNT/$PROCESSED_FORECAST_SETS_DIR/processed_forecast_sets.tar.gz"

if [ "NO_CACHE" = "true" ]; then
    gsutil -m setmeta -h "Cache-Control:no-cache, no-store, must-revalidate, max-age=0" gs://WEBSITE_BUCKET/**
fi
